
--1.1 Using MERGE--
MERGE INTO TD_EMP_LOAD E1
USING (
    SELECT 
        EMP_ID,
        FIRST_NAME,
        LAST_NAME,
        START_DATE,
        END_DATE,
        CASE WHEN
            END_DATE >= START_DATE THEN 0
        ELSE 1 END STATUS
    FROM EMP_LOAD
) E2
ON (E1.EMP_ID = E2.EMP_ID)

WHEN MATCHED THEN
    UPDATE
    SET
        E1.END_DATE = E2.END_DATE,
        E1.STATUS = 0
    WHERE E2.END_DATE >= E1.START_DATE

WHEN NOT MATCHED THEN
    INSERT (
        E1.EMP_ID,
        E1.FIRST_NAME,
        E1.LAST_NAME,
        E1.START_DATE,
        E1.STATUS
    ) VALUES (
        E2.EMP_ID,
        E2.FIRST_NAME,
        E2.LAST_NAME,
        E2.START_DATE,
        E2.STATUS
    );

--2--
MERGE INTO TD_CUST_LOAD c1
USING (
    SELECT
        C.CUST_ID,
        COUNT(1) AS AVL,
        DENSE_RANK() OVER (ORDER BY COUNT(1) DESC) AS RANK_TRANS,
        TRUNC(SYSDATE) AS UPDATE_DATE
    FROM CUSTOMER C 
    JOIN ACCOUNT A
        ON C.CUST_ID = A.CUST_ID
    JOIN ACC_TRANSACTION AT
        ON AT.ACCOUNT_ID = A.ACCOUNT_ID
    GROUP BY C.CUST_ID, TRUNC(SYSDATE)
) c2
ON c1.CUST_ID = c2.CUST_ID
WHEN MATCHED THEN
    UPDATE
    SET c1.RANK_TRANS = c2.RANK_TRANS
    WHERE c1.RANK_TRANS != c2.RANK_TRANS
WHEN NOT MATCHED THEN
    INSERT (c1.CUST_ID, c1.RANK_TRANS, c1.UPDATE_DATE)
    VALUES (c2.CUST_ID, c2.RANK_TRANS, c2.UPDATE_DATE);